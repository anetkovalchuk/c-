#include <math.h>
#include <stdio.h>
#include <stdint.h>

double sReLu(double tl, double tr, double al, double ar, double x) {
    if (x <= tl) {
        return tl + al * (x - tl);
    } else if (x < tr) {
        return 0;
    } else {
        return tr + ar * (x - tr);
    }
}


double sReLu_derivative(double tl, double tr, double al, double ar, double x) {
    if (x <= tl) {
        return al;
    } else if (x < tr) {
        return 0;
    } else {
        return ar;
    }
}

void task1() {
    double r, a, b, c;
    double y1, y2;
    int count = 0;

    printf("Enter r, a, b, c: ");
    scanf("%lf %lf %lf %lf", &r, &a, &b, &c);

    if (a * a > r * r) {
        printf("0 intersection points\n");
    } else {
        y1 = sqrt(r * r - a * a);
        y2 = -y1;

        if (y1 >= fmin(b, c) && y1 <= fmax(b, c)) {
            count++;
        }
        if (y2 >= fmin(b, c) && y2 <= fmax(b, c)) {
            count++;
        }

        printf("Count of intersection points: %d\n", count);
    }
}

void task2() {
    double tl = -1.0, tr = 1.0;
    double al = 0.5, ar = 0.5;
    double x = -2.0;

    double result = sReLu(tl, tr, al, ar, x);
    double derivative = sReLu_derivative(tl, tr, al, ar, x);

    printf("sReLu(%f) = %f\n", x, result);
    printf("sReLu'(%f) = %f\n", x, derivative);
}

int main() {
    task1();
    task2();

    return 0;
}
